
==================== FINAL INTERFACE ====================
2018-09-24 16:37:25.8801161 UTC

interface Lowest-common-ancestor-0.1.0.0-GTeHDaT6fsa4c8igZjTReE:Lib 8043
  interface hash: 519bde4b395d099cac99c9ad94bdf225
  ABI hash: fda15a7289bbbd84cb8e4f6fe38cf386
  export-list hash: 203483e480b2d4903c54d87daa67c068
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1f596daf84c7527444ae092b33472386
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.bTree
  Lib.lca
  Lib.lcaPrint
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
58e0a419bfc11afcfbc20930f5c2d616
  $fShowTree :: GHC.Show.Show a => GHC.Show.Show (Lib.Tree a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (Lib.Tree a)
                  (Lib.$fShowTree_$cshowsPrec @ a v)
                  (Lib.$fShowTree_$cshow @ a v)
                  (Lib.$fShowTree_$cshowList @ a v) -}
51338707875182ff9cb543b1384bf6af
  $fShowTree1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
58e0a419bfc11afcfbc20930f5c2d616
  $fShowTree_$cshow ::
    GHC.Show.Show a => Lib.Tree a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dShow :: GHC.Show.Show a) (x :: Lib.Tree a) ->
                 Lib.$fShowTree_$cshowsPrec
                   @ a
                   $dShow
                   Lib.$fShowTree1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
58e0a419bfc11afcfbc20930f5c2d616
  $fShowTree_$cshowList ::
    GHC.Show.Show a => [Lib.Tree a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Lib.Tree a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Lib.Tree a)
                   (Lib.$fShowTree_$cshowsPrec @ a $dShow Lib.$fShowTree1)
                   ls
                   s) -}
58e0a419bfc11afcfbc20930f5c2d616
  $fShowTree_$cshowsPrec ::
    GHC.Show.Show a => GHC.Types.Int -> Lib.Tree a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><L,1*U(U)><S,1*U> -}
7e7bb490ca479947acd41121ef83123b
  $tc'Empty :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7051086531732394599##
                   12449504336810827576##
                   Lib.$trModule
                   Lib.$tc'Empty2
                   1#
                   Lib.$tc'Empty1) -}
25cde09e079967e4d078f9d68119a717
  $tc'Empty1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
d4a36f29f045328e2db709b87d76cb23
  $tc'Empty2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Empty3) -}
e34474ffd08f0da33da7e08351051105
  $tc'Empty3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Empty"#) -}
c15a23dbfa4173b994102786b707b8b8
  $tc'Node :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17745756114110656673##
                   3951489684511206543##
                   Lib.$trModule
                   Lib.$tc'Node2
                   1#
                   Lib.$tc'Node1) -}
f1a88e83f1cfebc345bc0e30ce567af4
  $tc'Node1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bb00fb0cd9c440da45360cad0ebc742c
  $tc'Node2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tc'Node3) -}
b20b706762a0320194eb881371668043
  $tc'Node3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Node"#) -}
444f0133c6e14b4a2b2fb74ae99cd1b3
  $tcTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3070402275752265645##
                   12987384896952392003##
                   Lib.$trModule
                   Lib.$tcTree1
                   0#
                   GHC.Types.krep$*Arr*) -}
f27772737067f272b48b56efbe6a6b0e
  $tcTree1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$tcTree2) -}
be91d06ab3c33300d735bf5928dbf1f5
  $tcTree2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tree"#) -}
0408f436efa6630001e749dc0bf9a720
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule3 Lib.$trModule1) -}
591461d99ee014dc1793e7925d957fc8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule2) -}
00208bf6876c04db290a20e75f81c02c
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lib"#) -}
e2dc782c0f06b230a1f8806ce26a8a1d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule4) -}
3f0b498262ed0987180fa1beff73f715
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Lowest-common-ancestor-0.1.0.0-GTeHDaT6fsa4c8igZjTReE"#) -}
58e0a419bfc11afcfbc20930f5c2d616
  data Tree a = Empty | Node a (Lib.Tree a) (Lib.Tree a)
bbeedde0fba33afbb5b2f9a952dde9c0
  bTree :: Lib.Tree GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Lib.Node
                   @ GHC.Types.Int
                   Lib.bTree13
                   Lib.bTree7
                   Lib.bTree1) -}
15b0fa2fbb9e511d4703f402852ce63e
  bTree1 :: Lib.Tree GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Lib.Node
                   @ GHC.Types.Int
                   Lib.bTree6
                   Lib.bTree4
                   Lib.bTree2) -}
30242f098d9ae9ac8fd0b3d6934cf652
  bTree10 :: Lib.Tree GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Lib.Node
                   @ GHC.Types.Int
                   Lib.bTree11
                   (Lib.Empty @ GHC.Types.Int)
                   (Lib.Empty @ GHC.Types.Int)) -}
1126bf2b6c2719e8077b13d33595749a
  bTree11 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
01d8dfae09771e9e10c0d1de3e4162f0
  bTree12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
235647d2c9fbe451e05f73b107df1b6c
  bTree13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
5fd439f1ec14c27ec4086be2bb1848e4
  bTree2 :: Lib.Tree GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Lib.Node
                   @ GHC.Types.Int
                   Lib.bTree3
                   (Lib.Empty @ GHC.Types.Int)
                   (Lib.Empty @ GHC.Types.Int)) -}
82f97558d93b403e1e6f0cfa802c0c00
  bTree3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
3f0aeb359674fabb8767f719cda999e0
  bTree4 :: Lib.Tree GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Lib.Node
                   @ GHC.Types.Int
                   Lib.bTree5
                   (Lib.Empty @ GHC.Types.Int)
                   (Lib.Empty @ GHC.Types.Int)) -}
2175d7ab5a2e9ba45e216a87384357e1
  bTree5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
38dcb84776587c52a2f5703177d73c80
  bTree6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
c6f277e24fdb8da4c729ec27b1d3b238
  bTree7 :: Lib.Tree GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Lib.Node
                   @ GHC.Types.Int
                   Lib.bTree12
                   Lib.bTree10
                   Lib.bTree8) -}
aaf726b1df98e4c18ed23ef65d4e5f86
  bTree8 :: Lib.Tree GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Lib.Node
                   @ GHC.Types.Int
                   Lib.bTree9
                   (Lib.Empty @ GHC.Types.Int)
                   (Lib.Empty @ GHC.Types.Int)) -}
f67c1f36c209ad3620d6bfa7ad2059b5
  bTree9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
11a57ff7e54f4b775760676d4afef3f5
  lca ::
    GHC.Classes.Eq a =>
    Lib.Tree a -> a -> a -> Data.Either.Either GHC.Types.Bool a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><L,U><L,U> -}
69fe5f2688752ecf3d9abd99848ab2f4
  lcaPrint ::
    (GHC.Classes.Eq a, GHC.Show.Show a) =>
    Lib.Tree a -> a -> a -> GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,1*U(A,1*C1(U),A)><S,1*U><L,U><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   ($dShow :: GHC.Show.Show a)
                   (t :: Lib.Tree a)
                   (x :: a)
                   (y :: a) ->
                 case Lib.lca @ a $dEq t x y of wild {
                   Data.Either.Left ipv -> Lib.lcaPrint1
                   Data.Either.Right a1 -> GHC.Show.show @ a $dShow a1 }) -}
325e85fc2c159c4de684ebf8fbad1c05
  lcaPrint1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lib.lcaPrint2) -}
ec6690d9e2ee0280d50aaceb773ea269
  lcaPrint2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Error"#) -}
instance [safe] GHC.Show.Show [Lib.Tree] = Lib.$fShowTree
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

